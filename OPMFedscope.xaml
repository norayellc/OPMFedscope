<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1207,829" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="OPMFedscope workflow will automate:&#xA;&#xA;1. Download the zip file from the FedScope website to a local folder&#xA;2. Extract the contents of the zip file&#xA;3. Load data from each of the text files to the corresponding table in a blank MS Access Database file.&#xA;4. Send an email to the process owner with the status of execution and any errors encountered while loading data will be sent ." DisplayName="OPMFedscope" sap:VirtualizedContainerService.HintSize="758,764" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="OPMFedscope" Name="WorkflowName" />
      <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory + &quot;\&quot;]" Name="Cwd" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="IsChildWorkflow" />
      <Variable x:TypeArguments="x:Boolean" Default="[If(IsChildWorkflow AndAlso Not Cwd.EndsWith(WorkflowName + &quot;\&quot;), True, False)]" Name="WorkflowInvoked" />
      <Variable x:TypeArguments="x:String" Default="[If(IsChildWorkflow AndAlso Not WorkflowInvoked, Path.GetDirectoryName(Path.GetDirectoryName(cwd.TrimEnd(&quot;\&quot;c).ToCharArray)) + &quot;\&quot;, cwd)]" Name="SolutionDir" />
      <Variable x:TypeArguments="x:String" Default="[SolutionDir + &quot;.workflows\&quot;]" Name="WorkflowsDir" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" Name="DebugDictionary" />
      <Variable x:TypeArguments="x:String" Name="QuarterToDownload" />
      <Variable x:TypeArguments="x:Boolean" Name="IsOPMBrowserOpened" />
      <Variable x:TypeArguments="s:Exception" Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessException" />
      <Variable x:TypeArguments="ui:Browser" Name="OPMBrowser" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="AccessDatabaseConnection" />
      <Variable x:TypeArguments="x:String" Default="[&quot;Hi&quot;+Environment.NewLine+&quot;Please find below list of tables not correctly updated: &quot;]" Name="BodyReport" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">330,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">360,77.5 360,107.5 350,107.5 350,117</av:PointCollection>
        <x:Double x:Key="Width">724</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Height">620</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">250,117</av:Point>
          <av:Size x:Key="ShapeSize">200,128</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">350,245 350,275 350.5,275 350.5,296.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Read Config file, Open OPM browser and download selected quarter files" DisplayName="Init" sap:VirtualizedContainerService.HintSize="200,128" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch DisplayName="Try initializing settings and applications" sap:VirtualizedContainerService.HintSize="564,1788" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Load configurations and open applications" sap:VirtualizedContainerService.HintSize="526,1556" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign SystemException (initialization)" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <If sap2010:Annotation.AnnotationText="An uninitialized Config dictionary indicates that it is the first run of the process." Condition="[Config is Nothing]" DisplayName="If first run, read local configuration file" sap:VirtualizedContainerService.HintSize="484,966" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="399,755" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Default="[If(IsChildWorkflow AndAlso WorkflowInvoked, WorkflowsDir + WorkflowName + &quot;\&quot;, cwd)]" Name="WorkflowDir" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Config file is saved at &quot;C:\Programdata\Uipath\Packages\" DisplayName="Invoke ReadConfigFile workflow" sap:VirtualizedContainerService.HintSize="357,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName=".workflows\ReadConfigFile\ReadConfigFile.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">["C:\ProgramData\UiPath\Packages\"+WorkflowName+".csv"]</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Initialize_DebugDictionary" sap:VirtualizedContainerService.HintSize="357,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[DebugDictionary]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[New Dictionary(Of String, Boolean) From {{"DebugMode", Ctype(Config("DebugMode"),Boolean)}}]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="SetQuarterToDownload" sap:VirtualizedContainerService.HintSize="357,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[QuarterToDownload]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Config("QuarterToDownload").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="357,93" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Quarter selected &quot;+QuarterToDownload]" />
                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the process name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (BusinessProcessName)" sap:VirtualizedContainerService.HintSize="357,146" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                      </ui:AddLogFields.Fields>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddLogFields>
                  </Sequence>
                </If.Then>
              </If>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OpenBrowser workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName=".workflows\OpenBrowser\OpenBrowser.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:BrowserType" x:Key="in_BrowserType">
                    <mva:VisualBasicValue x:TypeArguments="ui:BrowserType" ExpressionText="BrowserType.Chrome" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_URL">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;OPMFedscopeURL&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ElementOnPageSelector">
                    <Literal x:TypeArguments="x:String">&lt;webctrl tag='H2' aaname='Datasets Available from OPM' /&gt;</Literal>
                  </InArgument>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsBrowserOpen">
                    <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="IsOPMBrowserOpened" />
                  </OutArgument>
                  <OutArgument x:TypeArguments="ui:Browser" x:Key="out_BrowserObject">
                    <mva:VisualBasicReference x:TypeArguments="ui:Browser" ExpressionText="OPMBrowser" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DownloadNewQuarter workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName=".workflows\DownloadNewQuarter\DownloadNewQuarter.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:Browser" x:Key="in_OPMBrowser">
                    <mva:VisualBasicValue x:TypeArguments="ui:Browser" ExpressionText="OPMBrowser" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_AccessDataBaseDirectory">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;AccessDataBaseDirectory&quot;).ToString" />
                  </InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_QuarterToDownload">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="QuarterToDownload" />
                  </InOutArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If Condition="[Not String.IsNullOrEmpty(QuarterToDownload) AndAlso Directory.Exists(Config(&quot;AccessDataBaseDirectory&quot;).ToString+QuarterToDownload+&quot;\TextFiles\&quot;)]" DisplayName="CorrectlyDownloaded" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="If_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseBrowser workflow" sap:VirtualizedContainerService.HintSize="341,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName=".workflows\CloseBrowser\CloseBrowser.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="ui:BrowserType" x:Key="in_BrowserType" />
                      <InArgument x:TypeArguments="ui:Browser" x:Key="in_BrowserObject">[OPMBrowser]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_ForceKill">False</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
              </If>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="530,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                </ActivityAction.Argument>
                <Assign sap2010:Annotation.AnnotationText="Failures during the initialization are considered system exceptions and lead to the End Process state, thus finalizing the execution." DisplayName="Assign SystemException" sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID1" DisplayName="IsQuarterDownloaded" sap:VirtualizedContainerService.HintSize="122,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
          <FlowDecision.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="Not String.IsNullOrEmpty(QuarterToDownload) AndAlso Directory.Exists(Config(&quot;AccessDataBaseDirectory&quot;).ToString+QuarterToDownload+&quot;\TextFiles\&quot;) AndAlso (SystemException is Nothing)" />
          </FlowDecision.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">289.5,296.5</av:Point>
              <av:Size x:Key="ShapeSize">122,87</av:Size>
              <av:PointCollection x:Key="FalseConnector">410.5,340 570,340 570,428.5</av:PointCollection>
              <av:PointCollection x:Key="TrueConnector">289.5,340 130,340 130,454.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">30,454.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,96</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">230,502.5 260,502.5 260,492.5 470,492.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch sap2010:Annotation.AnnotationText="Update all tables from AccessDB" DisplayName="UpdateOPMAccessDB" sap:VirtualizedContainerService.HintSize="200,96" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Update" sap:VirtualizedContainerService.HintSize="1025,1431" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Config(&quot;AccessDataBaseDirectory&quot;).ToString+QuarterToDownload+&quot;\Access_&quot;+QuarterToDownload.replace(&quot; &quot;,&quot;_&quot;)+&quot;.accdb&quot;]" DisplayName="CopyTemplateAccessDB" sap:VirtualizedContainerService.HintSize="983,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[SolutionDir+&quot;.resources\Template.accdb&quot;]" />
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="983,1139" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Directory.EnumerateFiles(Config(&quot;AccessDataBaseDirectory&quot;).ToString+QuarterToDownload+&quot;\TextFiles\&quot;, &quot;*.txt&quot;)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="UpdateFile" sap:VirtualizedContainerService.HintSize="947,1004" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="TableFromFile" />
                              <Variable x:TypeArguments="x:Boolean" Name="IsTableUpdatedCorrectly" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[file.Contains(&quot;FACTDATA&quot;) and DebugDictionary(&quot;DebugMode&quot;)]" DisplayName="FACTDATA" sap:VirtualizedContainerService.HintSize="905,912" sap2010:WorkflowViewState.IdRef="If_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;DebugMode FACTDATA is not created&quot;]" />
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,752" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[TableFromFile]" Delimitator="Comma" DisplayName="ReadTXTfile" FilePath="[file]" sap:VirtualizedContainerService.HintSize="484,155" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2" />
                                  <If Condition="[file.Contains(&quot;FACTDATA&quot;)]" DisplayName="RenameFACTDATAtable" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="If_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[file]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">FACTDATA</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateDBTable workflow" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName=".workflows\UpdateDBTable\UpdateDBTable.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ConnectionString">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=&quot;+Config(&quot;AccessDataBaseDirectory&quot;).ToString+QuarterToDownload+&quot;\Access_&quot;+QuarterToDownload.replace(&quot; &quot;,&quot;_&quot;)+&quot;.accdb&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProviderName">
                                        <Literal x:TypeArguments="x:String">System.Data.OleDb</Literal>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TableName">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Path.GetFileNameWithoutExtension(file)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_DataTable">
                                        <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="TableFromFile" />
                                      </InArgument>
                                      <InOutArgument x:TypeArguments="ui:DatabaseConnection" x:Key="io_DatabaseConnection">
                                        <mva:VisualBasicReference x:TypeArguments="ui:DatabaseConnection" ExpressionText="AccessDatabaseConnection" />
                                      </InOutArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_OverWriteTable">
                                        <Literal x:TypeArguments="x:Boolean" Value="True" />
                                      </InArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsTableCorrectlyUpdated">
                                        <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="IsTableUpdatedCorrectly" />
                                      </OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <If Condition="[IsTableUpdatedCorrectly]" DisplayName="IfErrorOnUpdate" sap:VirtualizedContainerService.HintSize="484,220" sap2010:WorkflowViewState.IdRef="If_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Else>
                                      <Assign DisplayName="AppendTableName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[BodyReport]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[BodyReport+environment.newline+Path.GetFileNameWithoutExtension(file)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1029,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,281" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[BodyReport]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Exception.Message+environment.newline+BodyReport]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Error on update &quot;+exception.Message]" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID0">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">470,428.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,128</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="Send the report to the process owner and close the OPM browser object used" DisplayName="End" sap:VirtualizedContainerService.HintSize="200,128" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[Not String.IsNullOrEmpty(QuarterToDownload) AndAlso Directory.Exists(Config(&quot;AccessDataBaseDirectory&quot;).ToString+QuarterToDownload+&quot;\TextFiles\&quot;)]" DisplayName="NOTInitializationError" sap:VirtualizedContainerService.HintSize="1183,559" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="755,399" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[Split(BodyReport,Environment.NewLine).Count&gt;2 or SystemException isnot Nothing]" DisplayName="Error Report" sap:VirtualizedContainerService.HintSize="713,307" sap2010:WorkflowViewState.IdRef="If_3">
                            <If.Then>
                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[BodyReport]" DisplayName="Send Report With Errors" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Report ERRORS OPMFedscope quarter &quot;+QuarterToDownload]" To="[Config(&quot;ProcessOwnerEmail&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                              </ui:SendOutlookMail>
                            </If.Then>
                            <If.Else>
                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Send Successful end Process" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;OPM Fedscope &quot;+QuarterToDownload+&quot;  database is now available!&quot;]" To="[Config(&quot;ProcessOwnerEmail&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                              </ui:SendOutlookMail>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="383,392" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Send Mail Error at initialization" sap:VirtualizedContainerService.HintSize="341,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Error at initialization OPMFedscope quarter &quot;+QuarterToDownload]" To="[Config(&quot;ProcessOwnerEmail&quot;).ToString]">
                            <ui:SendOutlookMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendOutlookMail.Files>
                          </ui:SendOutlookMail>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseBrowser workflow" sap:VirtualizedContainerService.HintSize="341,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName=".workflows\CloseBrowser\CloseBrowser.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="ui:BrowserType" x:Key="in_BrowserType" />
                              <InArgument x:TypeArguments="ui:Browser" x:Key="in_BrowserObject">
                                <mva:VisualBasicValue x:TypeArguments="ui:Browser" ExpressionText="OPMBrowser" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_ForceKill">
                                <Literal x:TypeArguments="x:Boolean" Value="True" />
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
  </Flowchart>
</Activity>